{
  "real_time_prices": "\n            from(bucket: \"high_frequency_data\")\n                |> range(start: -5m)\n                |> filter(fn: (r) => r[\"_measurement\"] == \"market_data\")\n                |> filter(fn: (r) => r[\"_field\"] == \"price\")\n                |> group(columns: [\"asset\", \"asset_type\"])\n                |> aggregateWindow(every: 1s, fn: last, createEmpty: false)\n                |> yield(name: \"real_time_prices\")\n        ",
  "top_movers": "\n            from(bucket: \"high_frequency_data\")\n                |> range(start: -1h)\n                |> filter(fn: (r) => r[\"_measurement\"] == \"market_data\")\n                |> filter(fn: (r) => r[\"_field\"] == \"price\")\n                |> group(columns: [\"asset\"])\n                |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)\n                |> sort(columns: [\"_value\"], desc: true)\n                |> limit(n: 10)\n        ",
  "volume_analysis": "\n            from(bucket: \"high_frequency_data\")\n                |> range(start: -1h)\n                |> filter(fn: (r) => r[\"_measurement\"] == \"market_data\")\n                |> filter(fn: (r) => r[\"_field\"] == \"volume\")\n                |> group(columns: [\"asset_type\"])\n                |> sum()\n                |> yield(name: \"volume_by_asset_type\")\n        ",
  "volatility_heatmap": "\n            from(bucket: \"high_frequency_data\")\n                |> range(start: -24h)\n                |> filter(fn: (r) => r[\"_measurement\"] == \"risk_metrics\")\n                |> filter(fn: (r) => r[\"_field\"] == \"volatility_30d\")\n                |> group(columns: [\"asset\", \"asset_type\"])\n                |> last()\n                |> sort(columns: [\"_value\"], desc: true)\n        "
}